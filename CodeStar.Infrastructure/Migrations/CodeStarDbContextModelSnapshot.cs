// <auto-generated />
using System;
using CodeStar.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeStar.Infrastructure.Migrations
{
    [DbContext(typeof(CodeStarDbContext))]
    partial class CodeStarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeStar.Domain.Entities.Instructor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_RoleId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasPriorExperience")
                        .HasColumnType("bit");

                    b.Property<string>("InstructorProfileSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProcessedByAdminId")
                        .HasColumnType("int");

                    b.Property<string>("Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Fk_RoleId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorCertification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CertificateName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FK_InstructorMediaID")
                        .HasColumnType("bigint");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("FK_InstructorMediaID");

                    b.ToTable("InstructorCertification");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorMedia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Fk_InstructorID")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("IntroductionVideo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_InstructorID")
                        .IsUnique();

                    b.ToTable("InstructorMedia");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorResume", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FK_InstructorMediaID")
                        .HasColumnType("bigint");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FK_InstructorMediaID");

                    b.ToTable("InstructorResume");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<string>("PersionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActived = true,
                            PersionTitle = "مدیر سیستم",
                            Title = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActived = true,
                            PersionTitle = "کاربر عادی",
                            Title = "User"
                        },
                        new
                        {
                            Id = 3,
                            IsActived = true,
                            PersionTitle = "منتور راهنما",
                            Title = "Mentor"
                        },
                        new
                        {
                            Id = 4,
                            IsActived = true,
                            PersionTitle = "مدرس دوره",
                            Title = "Teacher"
                        });
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_RoleId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Profile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.Instructor", b =>
                {
                    b.HasOne("CodeStar.Domain.Entities.Role", "Role")
                        .WithMany("Instructor")
                        .HasForeignKey("Fk_RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorCertification", b =>
                {
                    b.HasOne("CodeStar.Domain.Entities.InstructorMedia", "InstructorMedia")
                        .WithMany("Certifications")
                        .HasForeignKey("FK_InstructorMediaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructorMedia");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorMedia", b =>
                {
                    b.HasOne("CodeStar.Domain.Entities.Instructor", "Instructor")
                        .WithOne("InstructorMedia")
                        .HasForeignKey("CodeStar.Domain.Entities.InstructorMedia", "Fk_InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorResume", b =>
                {
                    b.HasOne("CodeStar.Domain.Entities.InstructorMedia", "InstructorMedia")
                        .WithMany("Resumes")
                        .HasForeignKey("FK_InstructorMediaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructorMedia");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.User", b =>
                {
                    b.HasOne("CodeStar.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Fk_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.Instructor", b =>
                {
                    b.Navigation("InstructorMedia");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.InstructorMedia", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("Resumes");
                });

            modelBuilder.Entity("CodeStar.Domain.Entities.Role", b =>
                {
                    b.Navigation("Instructor");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
